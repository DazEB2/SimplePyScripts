#!/usr/bin/env python3
# -*- coding: utf-8 -*-

__author__ = 'ipetrash'


import base64
text = b''
open('get_script.py', 'wb').write(base64.b64decode(text))

sql_text = b'LS0tLSBOT1RFOiDQo9C00LDQu9C40YLRjCwg0LjRgdC/0L7Qu9GM0LfRg9C10YLRgdGPINC00LvRjyDRgtC10YHRgtC40YDQvtCy0LDQvdC40Y8g0LfQsNC/0L7Qu9C90LXQvdC40Y8g0LHQtA0KLS1kcm9wIHRhYmxlIElGIEVYSVNUUyBNb3ZpZTsNCi0tZHJvcCB0YWJsZSBJRiBFWElTVFMgRGlyZWN0b3I7DQotLWRyb3AgdGFibGUgSUYgRVhJU1RTIEdlbnJlOw0KLS1kcm9wIHRhYmxlIElGIEVYSVNUUyBTdHVkaW87DQotLWRyb3AgdGFibGUgSUYgRVhJU1RTIEFnZUNhdGVnb3J5Ow0KLS1kcm9wIHRhYmxlIElGIEVYSVNUUyBDb3VudHJ5T2ZQcm9kdWN0aW9uOw0KLS0NCi0tZHJvcCB0YWJsZSBJRiBFWElTVFMgTGlua19Nb3ZpZV9EaXJlY3RvcjsNCi0tZHJvcCB0YWJsZSBJRiBFWElTVFMgTGlua19Nb3ZpZV9TdHVkaW87DQotLWRyb3AgdGFibGUgSUYgRVhJU1RTIExpbmtfTW92aWVfQ291bnRyeU9mUHJvZHVjdGlvbjsNCg0KDQpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBNb3ZpZSAoDQogICAgaWQgSU5URUdFUiBQUklNQVJZIEtFWSwNCg0KICAgIC0tINCd0LDQt9Cy0LDQvdC40LUNCiAgICBuYW1lIFRFWFQgTk9UIE5VTEwsDQoNCiAgICAtLSDQndCw0LjQvNC10L3QvtCy0LDQvdC40LUg0L3QsCDQuNC90L7RgdGC0YDQsNC90L3QvtC8INGP0LfRi9C60LUNCiAgICBmb3JlaWduX25hbWUgVEVYVCwNCg0KICAgIC0tINCW0LDQvdGADQogICAgZ2VucmVfaWQgSU5URUdFUiwNCg0KICAgIC0tINCT0L7QtCDQv9GA0L7QuNC30LLQvtC00YHRgtCy0LANCiAgICB5ZWFyX29mX3Byb2R1Y3Rpb24gSU5URUdFUiwNCg0KICAgIC0tINCa0L7Qu9C40YfQtdGB0YLQstC+INGB0LXRgNC40LkNCiAgICBudW1iZXJfb2Zfc2VyaWVzIElOVEVHRVIsDQoNCiAgICAtLSDQn9GA0L7QtNC+0LvQttC40YLQtdC70YzQvdC+0YHRgtGMINC/0L7QutCw0LfQsCAo0LzQuNC90YPRgtGLKQ0KICAgIGR1cmF0aW9uIElOVEVHRVIsDQoNCiAgICAtLSDQptCy0LXRgjogVHJ1ZSAtLSDRhtCy0LXRgtC90L7QuSwgRmFsc2UgLS0g0YfQtdGA0L3Qvi3QsdC10LvRi9C5DQogICAgY29sb3IgQk9PTEVBTiwNCg0KICAgIC0tINCS0L7Qt9GA0LDRgdGC0L3QsNGPINC60LDRgtC10LPQvtGA0LjRjyDQt9GA0LjRgtC10LvRjNGB0LrQvtC5INCw0YPQtNC40YLQvtGA0LjQuA0KICAgIGFnZV9jYXRlZ29yeV9pZCBJTlRFR0VSLA0KDQogICAgLS0g0JDQvdC90L7RgtCw0YbQuNGPDQogICAgYW5ub3RhdGlvbiBURVhULA0KDQogICAgQ09OU1RSQUlOVCBuYW1lX3VuaXF1ZSBVTklRVUUgKG5hbWUpDQopOw0KDQoNCi0tINCg0LXQttC40YHRgdC10YANCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIERpcmVjdG9yICgNCiAgICBpZCBJTlRFR0VSIFBSSU1BUlkgS0VZLA0KICAgIG5hbWUgVEVYVCBOT1QgTlVMTCwNCg0KICAgIENPTlNUUkFJTlQgbmFtZV91bmlxdWUgVU5JUVVFIChuYW1lKQ0KKTsNCg0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgR2VucmUgKA0KICAgIGlkIElOVEVHRVIgUFJJTUFSWSBLRVksDQogICAgbmFtZSBURVhUIE5PVCBOVUxMLA0KDQogICAgQ09OU1RSQUlOVCBuYW1lX3VuaXF1ZSBVTklRVUUgKG5hbWUpDQopOw0KDQotLSDQodGC0YPQtNC40Y8t0L/RgNC+0LjQt9Cy0L7QtNC40YLQtdC70YwNCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIFN0dWRpbyAoDQogICAgaWQgSU5URUdFUiBQUklNQVJZIEtFWSwNCiAgICBuYW1lIFRFWFQgTk9UIE5VTEwsDQoNCiAgICBDT05TVFJBSU5UIG5hbWVfdW5pcXVlIFVOSVFVRSAobmFtZSkNCik7DQoNCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIEFnZUNhdGVnb3J5ICgNCiAgICBpZCBJTlRFR0VSIFBSSU1BUlkgS0VZLA0KICAgIG5hbWUgVEVYVCBOT1QgTlVMTCwNCg0KICAgIENPTlNUUkFJTlQgbmFtZV91bmlxdWUgVU5JUVVFIChuYW1lKQ0KKTsNCg0KLS0g0KHRgtGA0LDQvdCwINC/0YDQvtC40LfQstC+0LTRgdGC0LLQsA0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgQ291bnRyeU9mUHJvZHVjdGlvbiAoDQogICAgaWQgSU5URUdFUiBQUklNQVJZIEtFWSwNCiAgICBuYW1lIFRFWFQgTk9UIE5VTEwsDQoNCiAgICBDT05TVFJBSU5UIG5hbWVfdW5pcXVlIFVOSVFVRSAobmFtZSkNCik7DQoNCg0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgTGlua19Nb3ZpZV9EaXJlY3RvciAoDQogICAgbW92aWVfaWQgSU5URUdFUiwNCiAgICBkaXJlY3Rvcl9pZCBJTlRFR0VSLA0KDQogICAgUFJJTUFSWSBLRVkgKG1vdmllX2lkLCBkaXJlY3Rvcl9pZCkNCik7DQoNCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIExpbmtfTW92aWVfU3R1ZGlvICgNCiAgICBtb3ZpZV9pZCBJTlRFR0VSLA0KICAgIHN0dWRpb19pZCBJTlRFR0VSLA0KDQogICAgUFJJTUFSWSBLRVkgKG1vdmllX2lkLCBzdHVkaW9faWQpDQopOw0KDQpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBMaW5rX01vdmllX0NvdW50cnlPZlByb2R1Y3Rpb24gKA0KICAgIG1vdmllX2lkIElOVEVHRVIsDQogICAgY291bnRyeV9vZl9wcm9kdWN0aW9uX2lkIElOVEVHRVIsDQoNCiAgICBQUklNQVJZIEtFWSAobW92aWVfaWQsIGNvdW50cnlfb2ZfcHJvZHVjdGlvbl9pZCkNCik7DQo='
open('init_db_opendata_register_movie.sql', 'wb').write(base64.b64decode(sql_text))
